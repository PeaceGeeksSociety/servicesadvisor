<?php
/**
 * @file
 * Code for the Services Advisor Migration feature.
 */

include_once 'services_advisor_migration.features.inc';

/**
 * Implements hook_feeds_processor_targets().
 */
function services_advisor_migration_feeds_processor_targets($entity_type, $bundle) {
  $targets = array();
  $field_info_instances = field_info_instances($entity_type, $bundle);

  foreach ($field_info_instances as $field_name => $field_info_instance) {
    $field_info = field_info_field($field_name);

    if ($field_info['type'] == 'office_hours') {
      $targets[$field_name . ':all'] = array(
        'name' => $field_info_instance['label'] . ': All',
        'description' => t('Allows the setting of multiple hour blocks as 1 source field.'),
        'callback' => 'service_advisor_migration_source_office_hours',
        'real_target' => $field_name,
      );
    }
  }

  return $targets;
}

/**
 * Example callback specified in hook_feeds_processor_targets().
 *
 * @param FeedsSource $source
 *   Field mapper source settings.
 * @param object $entity
 *   An entity object, for instance a node object.
 * @param string $target
 *   A string identifying the target on the node.
 * @param array $values
 *   The value to populate the target with.
 * @param array $mapping
 *  Associative array of the mapping settings from the per mapping
 *  configuration form.
 */
function service_advisor_migration_source_office_hours(FeedsSource $source, $entity, $target, array $values, array $mapping) {
  $real_target = str_replace(':all', '', $mapping['target']);
  $lang = $mapping['language'];
  $values = explode(',', $values[0]);
  $hours = array();
  $results = array();

  // Merge Hours and Minutes.
  foreach ($values as $key => $v) {
    if (!($key % 2)) {
      $value = ltrim($v, '0');
    } else {
      $value .= $v;
      $hours[] = $value;
    }
  }

  $dayIndex = 0;
  $dayNumCount = array();

  foreach ($hours as $key => $hour) {
    if (!($key % 2)) {
      // start
      if (!isset($dayNumCount[$dayIndex])) {
        $dayNumCount[$dayIndex] = 1;
      }
      $day['day'] = $dayIndex;
      $day['starthours'] = $hour;
    } else {
      // end
      $day['endhours'] = $hour;

      if ($day['starthours'] !== '') {
        $results[] = $day;
      }

      // If there is no hour value or we already have 2 timeblocks increment the day.
      if ($day['starthours'] === '' || $dayNumCount[$dayIndex] > 1) {
        $dayIndex++;
      } else {
        // Add to counter for each time block of this day.
        $dayNumCount[$dayIndex]++;
      }
    }
  }

  if (!empty($results)) {
    $entity->{$real_target}[$lang] = $results;
  }
}